<% time_at_start = Time.now %>
<% require "will_paginate/array" %>
<h1 class="nonprinting">
  <%= link_to @cardset.name, @cardset %>
</h1>
<% @title = "#{@cardset.name}: Visual Spoiler" %>

<%= render "shared/printcontrols" %>

<%= render "setviews" %>

<%  
    if params[:section]
      "see whether we have this section in the cache"
      section = params[:section]
      cards_to_show = nil
      num_cards_to_show = nil
      card_frame_letters = nil
      "don't calculate these if it's all in the cache anyway"
      showing_all = false
    else
      "we need to do the work up front"
      cards_to_show = @cardset.public_cards.eager_load(link: [{cardset: :mechanics}]).includes(comments: :user, cardset: :mechanics)
      num_cards_to_show = cards_to_show.count 
      card_frame_letters = cards_to_show.map &:category_letter
       
      if num_cards_to_show <= 275
        showing_all = true
      else
        "first section, whatever that is"
        showing_all = false
        section = Card.frame_code_letters.detect {|l| card_frame_letters.include?(l)}
      end
    end
    if showing_all
      cache_suffix = "sectionall"
    else
      cache_suffix = "section" + section + "page" + "#{params[:page] || 1}"
    end
   %>
   
<% cache(:action => "visualspoiler", :iterator => @cardset.memcache_iterator, :action_suffix => cache_suffix) do %>
  <% if cards_to_show.nil?
       cards_to_show = @cardset.public_cards.eager_load(:link).includes(:comments, cardset: :mechanics)
       num_cards_to_show = cards_to_show.count 
       card_frame_letters = cards_to_show.map &:category_letter
     end %>
  <% if showing_all 
       cards_to_show = cards_to_show.sort
       cards_to_show = cards_to_show.paginate(:page => params[:page], :per_page => 9999)
     else
       cards_to_show = cards_to_show.select {|c| c.category_letter == section }.sort
       num_cards_to_show = cards_to_show.count 
       cards_to_show = cards_to_show.paginate(:page => params[:page], :per_page => 50)
       num_cards_shown = cards_to_show.count 
     end %>
  <div class="nonprinting">
    <% if showing_all %>
      <% num_total_cards = @cardset.cards.nonsecondary.count %>
      <% if num_cards_to_show == num_total_cards %>
        <p>Showing all <%= pluralize cards_to_show.count, "card" %>
      <% else %>
        <p>Showing <%= pluralize cards_to_show.count, "active card" %>, of <%= num_total_cards %> total
      <% end %>
      </p>
    <% else %>
      <p>Showing <%= num_cards_shown %> of <%= num_cards_to_show %> <%= cards_to_show.first.category %> <%= (num_cards_shown == 1 ? "card" : "cards") %></p>
    <% end %>
  </div>
  <% cache(:action => "visualspoiler", :iterator => @cardset.memcache_iterator, :action_suffix => "frame_buttons") do %>
    <% present_rarity_letters = cards_to_show.map &:rarity_letter
       if showing_all
         frame_links = nil
       else
         "assemble the url that ends in ...&section= so that the partial can append the section to it"
         frame_links = visualspoiler_cardset_path(@cardset, :section => "")
         "map link letters to text of frames & cards counts"
         frames_and_letters = Card.frames_and_letters
         present_frame_letters = Card.frame_code_letters.select {|l| card_frame_letters.include?(l)}
         frames_link_text = present_frame_letters.map do |letter|
           these_letters = card_frame_letters.select{|l2| l2==letter}
           [letter, "#{frames_and_letters[letter]} (#{these_letters.count})"]
         end
       end
    %>
    <%= render :partial => "card_category_buttons", :locals => { :present_frame_letters => card_frame_letters, :present_rarity_letters => present_rarity_letters, :frame_links => frame_links, :frames_link_text => frames_link_text } %>
 
  <% end %>
  <span class="nonprinting"><%= will_paginate cards_to_show, :params => {:section => params[:section]} %></span>
  <p>
    <% cards_to_show.each do |card| %>
      <div class="card_comment_group">
        <% @card = card 
           classes = "visualspoiler code_hideable code_frame_#{@card.category_letter} code_rarity_#{@card.rarity_letter}" %>
        <%= render :partial => "shared/card", :locals => {:link => true, :classes => classes} %>
        <% if !@printable %>
          <%= render :partial => "shared/cardcommentcount" %>
        <% end %>
      </div>
    <% end %>
    <% @card = nil %>
  </p>
  <span class="nonprinting"><%= will_paginate cards_to_show, :params => {:section => params[:section]} %></span>
  <% "another copy of the frame and rarity toggles / links. Should definitely be in the cache now, so what goes in-between the cache do...end doesn't really matter" %>
  <% cache(:action => "visualspoiler", :iterator => @cardset.memcache_iterator, :action_suffix => "frame_buttons") do %>
    <p class="nonprinting">
      <%= render :partial => "card_category_buttons", :locals => { :present_frame_letters => card_frame_letters, :present_rarity_letters => present_rarity_letters, :frame_links => frame_links, :frames_link_text => frames_link_text } %>
    </p>
  <% end %>
<% end %>

<p class="nonprinting"><br>
  <%= render "setviews" %>
</p>
