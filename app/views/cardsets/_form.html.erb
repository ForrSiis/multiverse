<% if @cardset.new_record? && current_user.cardsets.empty? %>
  <% form_initially_hidden = true; %>
  <h3>Welcome!</h3>
  
  <p>If you just want to create a test card or two, visit the
    <b><a href="http://www.magicmultiverse.net/cardsets/2">Testing</a></b> cardset and click Create card. If you have an idea for a card
    or two but not a whole cardset, <b><a href="http://www.magicmultiverse.net/cardsets/74">Cards With No Home</a></b> is the place for
    them; unless they're silly enough to go in <b><a href="http://www.magicmultiverse.net/cardsets/10">Silver-Bordered or Joke Cards</a></b>.
	<br><br>
	If you are planning to create a full cardset under development, then click
    here to fill in its details:
    <a onclick="$('whole_cardset_form').show();" href="#">Create new cardset</a>
  </p>

<span id="whole_cardset_form" style="display:none;">
<% end %>

<%= form_for(@cardset) do |f| %>
  <% errors = @cardset.errors || @cardset.configuration.errors %>
  <% if errors.any? %>
    <% Rails.logger.warn "Cardset errors: #{errors.inspect}" %>
    <div id="error_explanation">
      <h2><%= pluralize(errors.count, "error") %> prohibited this cardset from being saved:</h2>

      <ul>
      <% errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div>Owner of this cardset is: <%= link_to @cardset.user.name, @cardset.user %>
  </div>
  <table>
   <tr>
    <td><!-- Cardset properties -->
      <div class="field">
        <%= f.label :name, "Cardset name" %><br />
        <%= f.text_field :name %>
      </div>
        <!-- %= f.hidden_field :user_id, :value => current_user.id % -->
      <div class="field">
        <%= f.label :description, "Short description" %><br />
        <%= f.text_field :description, :width => "50em" %>
          <div class="helptext">This is a short sentence that will be displayed alongside your set's name in lists.
          <br>You can add more elaborate description using
          <% if !@cardset.new_record?  # Can`t use link_to_unless, because n_c_d_p_p(@c) will *error* if @c.new_record. %>
            <%= link_to "details pages", new_cardset_details_page_path(@cardset) %>.
          <% else %>
            details pages.
          <% end %>
          </div>
      </div>
    </td>
    <td><!-- Cardset configuration -->
    <%= fields_for @cardset.configuration do |config_fields| %>
      <div class="config_section">
		<div style="display: inline-block;">
        Border colour:
		</div>
        <% %w{black white silver gold purple}.each do |colour| %>
          <div class="editborder_outer">
		    <span class="<%= colour %>border">
            <span class="editborder_inner">
              <%= config_fields.radio_button :border_colour, colour, :checked => (@cardset.configuration.border_colour == colour) 
              %><%= config_fields.label :border_colour, colour.capitalize, :value => colour %>
            </span>
            </span>
		  </div>
        <% end %>
      </div>
      <div class="config_section">
        Allow to view:
          <%= config_fields.select :visibility, @cardset.configuration.legal_values[:visibility].invert.to_a %>
      </div>

      <div class="config_section">
        Allow comments by:
          <%= config_fields.select :commentability, @cardset.configuration.legal_values[:commentability].invert.to_a %>
      </div>

      <div class="config_section">
        Allow new cards and card editing by:
          <%= config_fields.select :editability, @cardset.configuration.legal_values[:editability].invert.to_a %>
      </div>

      <div class="config_section">
        Grant admin privileges to:
          <%= config_fields.select :adminability, @cardset.configuration.legal_values[:adminability].invert.to_a %>

          <div class="config_subsection user_selectors" style="display:none;">Grant admin privileges to the following users:
            <table>
              <tr>
                <td>All users:<br>
                  <%=
                  %><%
                  select_tag(:all_users, 
                        options_from_collection_for_select(User.all, :id, :name), 
                        :multiple => true, :size => 10) %>
                </td>
                <td>
                  <br>
                  
      <div class="button_outer"><div class="button_inner"><button>Add -></button></div></div>
                  <br>
                  
      <div class="button_outer"><div class="button_inner"><button><- Remove</button></div></div>
                </td>
                <td>Admin users:<br>
                  <% "@cardset.configuration.admins = [User.find(1), User.find(2)]" %>
                  <% current_admins = (@cardset.configuration.admins.blank? ? [@cardset.user] : @cardset.configuration.admins) %>
                  <%= 
                  %><%config_fields.select(:admins, 
                        options_for_select(current_admins.map {|u| [u.name, u.id]}), 
                        {}, 
                        {:multiple => true, :size => 10}) %>
                 <% "= select()" %>
                </td>
              </tr>
            </table>
          </div>
          <div class="helptext">Only the cardset owner can delete the cardset. But people with admin privileges can do everything else: edit and delete details pages, mechanics, and the set skeleton, and alter these configuration options.</div>
      </div>

      <div class="config_section">
        <%= config_fields.label :use_highlighting, "Enable comment highlighting" %>
          <%= config_fields.check_box :use_highlighting %>
          <div class="helptext">This is used to highlight certain comments to draw their attention to visitors.
          Highlighted comments will be shown near the top of your cardset's front page.</div>

        <%= config_fields.label :use_addressing, "Enable comment addressing" %>
          <%= config_fields.check_box :use_addressing %>
          <div class="helptext">This is used to keep track of whether action is still needed on comments.
          Unaddressed comments are highlighted in red, <i>only to admins</i>. A comment's
          addressed/unaddressed status is invisible to non-admin users.</div>
       </div>

      <div class="config_section">
        Default comment state:
          <%= config_fields.select :default_comment_state, @cardset.configuration.legal_values[:default_comment_state].invert.to_a %>
      </div>

      <div class="config_section">
        Display cards:
          <%= config_fields.select :frame, @cardset.configuration.legal_values[:frame].invert.to_a %>
      </div>

      <div class="config_section">
        <%= config_fields.label :card_show_code, "Use card codes?" %>
          <%= config_fields.check_box :card_show_code %>
        <div class="helptext">Card codes are strings like CW01 used to identify a card's
          role in the set. <%= @cardset.new_record? ? "Set skeletons" : link_to("Set skeletons", skeleton_cardset_path(@cardset)) %> work best with card codes enabled.</div>
      </div>

      <div class="config_section">
        <% 'link_to_if !@cardset.new_record? && !@cardset.cards.empty?, "single card view", @cardset.cards.first'
        %>
        <%= config_fields.label :card_show_active, "Enable card \"active\" status?" %>
          <%= config_fields.check_box :card_show_active %>
        <div class="helptext">If you enable the "active" status, some features like boosters will
          only select from the active cards rather than all cards.</div>
      </div>

      <div class="config_section">
        On <%= @cardset.new_record? ? "cardlist" : link_to("cardlist", cardlist_cardset_path(@cardset)) %>:
          <%= config_fields.label :cardlist_show_comments, "Show comments" %>
            <%= config_fields.check_box :cardlist_show_comments %>
          <%= config_fields.label :cardlist_show_code, "Show code" %>
            <%= config_fields.check_box :cardlist_show_code %>
      </div>

    <% end %>
    </td>
   </tr>
  </table>
  <div class="actions">
    <div class="button_outer"><div class="button_inner">
      <%= f.submit %>
    </div></div>
  </div>
<% end %>

<% if form_initially_hidden %>
  </span>
<% end %>