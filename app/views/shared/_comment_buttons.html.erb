<% "Takes one parameter, show_date" %>
<% if show_date %>
<div class="commentdetails">
  <% link_destination = (@comment.card.present? ? card_path(@comment.card) : cardset_comments_path(@comment.cardset))
     link_params = {:title => "permalink", :class => "no_tooltip"}
  %>
  <% if show_date == "absolute" %>
    on <%= link_to format_datetime_absolute(@comment.created_at), link_destination + "#" + @comment.anchor_name, link_params %>
  <% else %>
    <%= link_to format_datetime(@comment.created_at), link_destination + "#" + @comment.anchor_name, link_params %>
  <% end %>
  by
  <%= link_to_comment_user @comment %>:
<% end %>
  <% target_of_links = @comment # (@comment.cardset_id ? [@cardset, @comment] : @comment) %>
  <% if permission_to?(:admin, @cardset) %>
    <%= link_to image_tag("delete.png", :alt => "Delete this comment",
                          :title => "Delete this comment"),
                @comment,
                :data => { :confirm => "Really delete this comment?" },
                :method => :delete %>
  <% end %>
  <% if permission_to?(:edit, @cardset)   # Editors can set comment status %>
    <% comment_actions = [
         :address,
         :unaddress,
         :highlight,
         :unhighlight,
       ]
       comment_images = {
         :address => "address.png",
         :unaddress => "unaddress.png",
         :highlight => "highlight.png",
         :unhighlight => "unhighlight.png",
       }
       comment_descriptions = {
         :address => "Mark this comment addressed",
         :unaddress => "Mark this comment unaddressed",
         :highlight => "Highlight this comment",
         :unhighlight => "Unhighlight this comment",
       }
       comment_values = {
         :address => Comment.status[:normal],
         :unaddress => Comment.status[:unaddressed],
         :highlight => Comment.status[:highlighted],
         :unhighlight => Comment.status[:normal],
       }


       if @comment.unaddressed? && @cardset.configuration.use_addressing
         visible_buttons = [:address, :highlight]
       elsif @comment.highlighted? && @cardset.configuration.use_highlighting
         visible_buttons = [:unhighlight, :unaddress]
       else
         visible_buttons = (@cardset.configuration.use_highlighting ? [:highlight] : []) +
             (@cardset.configuration.use_addressing ? [:unaddress ] : [])
       end
       visibility = Hash[ comment_actions.map {
                     |b| visible_buttons.include?(b) ? [b, 'inline'] : [b, 'none']
                    } ]
       %>
    <% comment_actions.each do |action| %>
      <% formid = "#{action.to_s}_comment_#{@comment.id}" %>
      <%= form_for target_of_links,
                             :remote => true, :dataType => 'script', :with => "action = update", #"#{action}",
              :html => {
                :id => formid,
                :style => "display: #{visibility[action]}"
              } do |f| %>
        <%= f.hidden_field :status, :value => comment_values[action] %>
        <%= image_submit_tag comment_images[action], :alt => comment_descriptions[action],
                                                   :title => comment_descriptions[action] %>
      <% end %>

    <% end %>
  <% end %>
  <% if permission_to_edit?(@comment) %>
    <%= link_to image_tag("edit.png",
                          :alt => "Edit this comment",
                          :title => "Edit this comment"),
                edit_comment_path(target_of_links) %>
  <% end %>

<% if show_date %>
</div>
<% end %>