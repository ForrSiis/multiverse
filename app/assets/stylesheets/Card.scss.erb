//= depend_on_asset "loading.gif"
//= depend_on_asset "foil_highlight.png"
//= depend_on_asset "loyaltyup.png"
//= depend_on_asset "loyaltynaught.png"
//= depend_on_asset "loyaltydown.png"
//= depend_on_asset "loyalty.png"
//= depend_on_asset "loyalty_big.png"
//= depend_on_asset "dfc_front.png"
//= depend_on_asset "dfc_back.png"
//= depend_on_asset "chaos_tiny.png"

@mixin rotate_180 {
  /* Safari */
  -webkit-transform: rotate(-180deg);
  /* Firefox */
  -moz-transform: rotate(-180deg);
  /* Internet Explorer */
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);
}
@mixin rotate_minus90 {
  /* Safari */
  -webkit-transform: rotate(-90deg);
  /* Firefox */
  -moz-transform: rotate(-90deg);
  /* Internet Explorer */
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);
}
@mixin rotate_plus90 {
  /* Safari */
  -webkit-transform: rotate(90deg);
  /* Firefox */
  -moz-transform: rotate(90deg);
  /* Internet Explorer */
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
}
@mixin hide_but_allow_children {
  position: absolute;
  left: -5000px;
}
@mixin show_children_of_hidden {
  position: relative;
  left: +5000px;
}
@mixin gradient_horz($start, $end) {
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$end}', GradientType=1);
  background: -webkit-gradient(linear, left top, right top, from($start), to($end));
  background: -moz-linear-gradient(left,  $start,  $end);
  background: linear-gradient(to right, $start, $end);
}
@mixin gradient_horz_highlight($startend, $middle) {
  background: -webkit-gradient(linear, left top, right top, from($startend), color-stop(0.5, $middle), to($startend));
  background: -moz-linear-gradient(left, $startend, $middle, $startend);
  background: linear-gradient(to right, $startend, $middle 50%, $startend);
}
@mixin gradient_diag_highlight($startend, $middle) {
  background: -webkit-gradient(linear, right top, left bottom, from($startend), color-stop(0.5, $middle), to($startend));
  background: -moz-linear-gradient(right top, $startend, $middle, $startend);
  background: linear-gradient(to left bottom, $startend, $middle 50%, $startend);
}
@mixin gradient_vert($start, $end) {
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$end}', GradientType=0);
  background: -webkit-gradient(linear, left top, left bottom, from($start), to($end));
  background: -moz-linear-gradient(top,  $start,  $end);
  background: linear-gradient(to bottom, $start, $end);
}
@mixin gradient_vert_20($start, $mid, $end) {
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$end}', GradientType=0);
  background: -webkit-gradient(linear, left top, left bottom, from($start), color-stop(0.2, $mid), to($end));
  background: -moz-linear-gradient(top, $start, $mid, $mid, $mid, $end);
  background: linear-gradient(to bottom, $start, $mid 20%, $end);
}
@mixin gradient_vert_important($start, $end) {
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$end}', GradientType=0) !important;
  background: -webkit-gradient(linear, left top, left bottom, from($start), to($end)) !important;
  background: -moz-linear-gradient(top,  $start, $end) !important;
  background: linear-gradient(to bottom, $start, $end) !important;
}
@mixin gradient_vert_highlight($startend, $middle) {
  background: -webkit-gradient(linear, left top, left bottom, from($startend), color-stop(0.5, $middle), to($startend));
  background: -moz-linear-gradient(top, $startend, $middle, $startend);
  background: linear-gradient(to bottom, $startend, $middle 50%, $startend);
}
@mixin gradient_horz_padded($start, $end) {
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$end}', GradientType=1);
  background: -webkit-gradient(linear, left top, right top, from($start), color-stop(0.4, $start), color-stop(0.6, $end), to($end));
  background: -moz-linear-gradient(left, $start, $start, $end, $end);
  background: linear-gradient(to right, $start, $start 40%, $end 60%, $end);
}
@mixin twotone_horz($left, $right) {
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$left}', endColorstr='#{$right}', GradientType=1);
  background: -webkit-gradient(linear, left top, right top, from($left), color-stop(0.5, $left), color-stop(0.5, $right), to($right));
  background: -moz-linear-gradient(left, $left, $left, $right, $right);
  background: linear-gradient(to right, $left, $left 50%, $right 50%, $right);
}
@mixin round_corners($radius) {
  -moz-border-radius:    $radius;
  -webkit-border-radius: $radius;
  -khtml-border-radius:  $radius;
  border-radius:         $radius;
}
@mixin elliptical_corners($horz, $vert) {
  -moz-border-radius:    $horz;
  -webkit-border-radius: $horz;
  -khtml-border-radius:  $horz;
  border-radius:         $horz;
  -moz-border-radius:    #{$horz} / #{$vert};
  -webkit-border-radius: $horz $vert;
  -khtml-border-radius:  #{$horz} / #{$vert};
  border-radius:         #{$horz} / #{$vert};
}
@mixin elliptical_corners_asymmetric($tophorz, $topvert, $bottomhorz, $bottomvert) {
  -moz-border-radius:    $tophorz $tophorz $bottomhorz $bottomhorz;
  -webkit-border-radius: $tophorz $tophorz $bottomhorz $bottomhorz;
  -khtml-border-radius:  $tophorz $tophorz $bottomhorz $bottomhorz;
  border-radius:         $tophorz $tophorz $bottomhorz $bottomhorz;
  -moz-border-radius:    #{$tophorz} #{$tophorz} #{$bottomhorz} #{$bottomhorz} / #{$topvert} #{$topvert} #{$bottomvert} #{$bottomvert};
  -webkit-border-radius: #{$tophorz} #{$tophorz} #{$bottomhorz} #{$bottomhorz} / #{$topvert} #{$topvert} #{$bottomvert} #{$bottomvert};
  -khtml-border-radius:  #{$tophorz} #{$tophorz} #{$bottomhorz} #{$bottomhorz} / #{$topvert} #{$topvert} #{$bottomvert} #{$bottomvert};
  border-radius:         #{$tophorz} #{$tophorz} #{$bottomhorz} #{$bottomhorz} / #{$topvert} #{$topvert} #{$bottomvert} #{$bottomvert};
}
@mixin background_size($width, $height) {
  -webkit-background-size: $width $height; 
  -moz-background-size: $width $height; 
  -o-background-size: $width $height; 
  background-size: $width $height; 
}

/***** Card display *****/
$BorderWidth: 9px;  /* down for M15 frames from 10px */
.blackborder, .silverborder, .whiteborder, .purpleborder, .goldborder, .dfc .innercardborder {
  @include round_corners($BorderWidth);
  border-width: $BorderWidth;
  border-style: solid; 
  border-width: 1px;
  padding: $BorderWidth - 1;
}
.blackborder, .blackborder.dfc .innercardborder { border-color: black; background-color: black; }
$SilverBorder: #a3a3a3;
.silverborder, .silverborder.dfc .innercardborder { border-color: $SilverBorder; background-color: $SilverBorder; }
$GoldBorder: #ca0;
.goldborder, .goldborder.dfc .innercardborder { border-color: $GoldBorder; background-color: $GoldBorder; }
$PurpleBorder: #a6f;
.purpleborder, .purpleborder.dfc .innercardborder { border-color: $PurpleBorder; background-color: $PurpleBorder; }
.whiteborder, .whiteborder.dfc .innercardborder {
  border-color: black;
  background-color: white;
}
.dfc.cardborder { 
  // No border on the cardborder elements - it goes on the innercardborder instead
  border: none;
  padding: 0px;
  background-color: transparent;
}

$CardWidth: 200px;
$CardHeight: 300px;
$CardPaddingTop: 4px;
$CardPaddingBottom: 3px;
$CardPaddingLeft: 2px;
$CardPaddingRight: 2px;
$M15PaddingBottom: 23px;
$CardFormWidth: 350px;
$DFCCardWidth: 2 * $CardWidth + 4 * $BorderWidth + 5;
$SmallLandscapeCardWidth: $CardHeight;
$SmallLandscapeCardHeight: $CardWidth;
$LargeLandscapeCardWidth: 2 * $CardWidth;
$LargeLandscapeCardHeight: $CardHeight;
$LargePortraitCardWidth: $CardHeight;
$LargePortraitCardHeight: 2 * $CardWidth;

.whiteborder .card, .whiteborder .editborder_inner { border: 1px solid #888; }
.editborder_inner { background: white; padding-right: 5px; }
.editborder_outer { display: inline-block; margin: 10px 2px 10px 0px; }

.innercardborder { width: $CardWidth; min-height: $CardHeight; }
.flip .innercardborder { min-height: 0px; height: auto; }
.split .innercardborder { width: auto; min-height: $CardWidth; height: $CardWidth; }
.splitback .innercardborder { min-height: 0; height: 120px; width: auto; }

img.tooltip_image.portrait {
  /* We force it to size down */
  width: $CardWidth; 
  height: $CardHeight;
}
img.tooltip_image.split {
  width: $SmallLandscapeCardWidth; 
  height: $SmallLandscapeCardHeight;
}
img.tooltip_image.dfc {
  width: $DFCCardWidth; 
  height: $CardHeight;
}
img.tooltip_image.plane {
  width: $LargeLandscapeCardWidth; 
  height: $LargeLandscapeCardHeight;
}
img.tooltip_image.scheme, img.tooltip_image.vanguard {
  width: $LargePortraitCardWidth; height: $LargePortraitCardHeight;
}

div.card_loading {
  height: $CardHeight;
  text-align: center;
  padding-top: 20px;
  background-color: white;
  opacity: 0.5;
}
.commentcount {
  width: $CardWidth;
  background-color: white;
  opacity: 1;
  padding: 2px;
  font-size: 10px;
}
.distinct_mockup_container {
  background-color: white;
  opacity: 1;
  padding: 5px;
}
  
.distinct_mockup_container.split { width: $SmallLandscapeCardWidth + 2 * $BorderWidth; }
.distinct_mockup_container.dfc { width: $DFCCardWidth; }
.distinct_mockup_container.portrait { width: $CardWidth + 2 * $BorderWidth; }
.card { /* background: #0ff; */
  padding-top: $CardPaddingTop; padding-bottom: $CardPaddingBottom;
  padding-left: $CardPaddingLeft; padding-right: $CardPaddingRight;
  position: relative;
  min-height: $CardHeight - $CardPaddingTop - $CardPaddingBottom - $M15PaddingBottom;
  height: $CardHeight - $CardPaddingTop - $CardPaddingBottom - $M15PaddingBottom;
  width: $CardWidth - $CardPaddingLeft - $CardPaddingRight;
}
.card, .Colourless.Hybrid.card:before {
  @include elliptical_corners_asymmetric(4px, 4px, 20px, 20px);
}
/* Cards without M15 rounding: tokens, schemes, flip cards */
/*.card.token, */
.scheme .card, .flip .card {
  min-height: $CardHeight - $CardPaddingTop - $CardPaddingBottom;
  height: $CardHeight - $CardPaddingTop - $CardPaddingBottom;
  @include round_corners(1px);
  @include round_corners(0);
}
.foil {
  position: absolute; top: 0px; background-image: image-url("foil_highlight.png");
  top: 0; bottom: 0; left: 0; right: 0;
  /* width: $CardWidth;  height: 285px; */
}
.cardborder {
  position: relative;
  width: $CardWidth;
}
.banner {
  position: absolute;
  top: 40px;
  padding: 8px 0px;
  font-size: 20pt;
  background-color: #888;
  z-index: 4;
  width: $CardWidth;
  text-align: center;
}
.pinline { z-index: 1; }
.pinline_box { padding: 2px;}
.pinline_sides { padding-left: 2px; padding-right: 2px; }
.pinline_sidesbottom { padding-left: 2px; padding-right: 2px; padding-bottom: 2px; }
/* Avoid setting position: relative on pinlines for the name box - it prevents the card name bar floating above the foil overlay */
.pinline_sides, .pinline_sidesbottom, .pinline_box.typebox {
    position: relative;
}
.split, .splitback {
  .pinline_box { padding: 1px;}
  .pinline_sides { padding-left: 1px; padding-right: 1px; }
  .pinline_sidesbottom { padding-left: 1px; padding-right: 1px; padding-bottom: 1px; }
}
.pinline_box {
    border-left: 1px solid black;
    border-right: 1px solid black;
    border-bottom: 1px solid black;
    @include elliptical_corners(6px, 12px); }
.pinline_box > div { border: 1px solid black;
    @include elliptical_corners(4px, 8px);
    padding-left: 3px;
    padding-right: 3px; }
/* Left side outer */
.pinline_sides, .pinline_sidesbottom {
  border-left: 1px solid black; }
/* Left side inner */
.pinline_sides > div, .pinline_sidesbottom  > div {
  border-left: none; }
/* Right side inner */
.pinline_sides > div, .pinline_sidesbottom  > div {
  border-right: 1px solid black; }
/* Right side outer */
.pinline_sides, .pinline_sidesbottom {
  border-right: none; }
/* Bottom inner */
.pinline_sidesbottom > div {
  border-bottom: none; }
/* Bottom outer */
.pinline_sidesbottom {
  border-bottom: 1px solid black; }
/* .pinline_sides, .pinline_sides > div {
   border-left: 1px solid black; border-right: 1px solid black; }
.pinline_sidesbottom, .pinline_sidesbottom > div {
   border-left: 1px solid black; border-right: 1px solid black; border-bottom: 1px solid black; } */

.cardtitlebar, .cardtypebar { 
  font: bold 9pt serif; padding-top: 1px; /* padding-bottom: 1px; */ 
  position: relative;
}
.cardtitlebar:before, .cardtypebar:before, .cardtitlebar:after, .cardtypebar:after {
  content: " ";
  width: 97%;
  height: 2px;
  position: absolute;
  left: 3px;
}
.cardtitlebar:before, .cardtypebar:before {
  border-top: 1px solid rgba(255,255,255,0.8);
  top: 0px;
}
.cardtitlebar:after, .cardtypebar:after {
  border-top: 1px solid rgba(88,88,88,0.5);
  bottom: -2px;
}
.dfc .part2 .cardtitlebar:before, .dfc .cardtypebar:before {
  border-top-color: rgba(255, 255, 255, 0.4);
}
.dfc .part2 .cardtitlebar:after, .dfc .cardtypebar:after {
  border-top-color: rgba(0,0,0,0.5);
}
.Plane, .Scheme, .Vanguard {
  & .cardtitlebar, & .cardtypebar {
    &:before, &:after {
      content: ""; /* doesn't work to hide it? */
      border-color: transparent;
    }
  }
}
    
.form .cardtitlebar {
  min-width: 300px;
  table {
    width: 100%;
    td.card_cost_container {
      width: 100%;
      text-align: right;
      input#card_cost {
          text-align: right;
      }
    }
  }
}

.form.split .cardtitlebar, .form.splitback .cardtitlebar {
  min-width: inherit;
}
.plane .cardtypebar:after {
  border-top: none;
}


.cardname { float: left;
   position: relative; z-index: +5;  /* so that foils' names are still clickable */
}
.cardname a {
    text-decoration-color: rgba(0, 0, 0, .5);
}
.cardname a:hover {
    text-decoration: underline;
}
.cardmanacost { float: right; padding-right: 3px; }
.cardart_container, .cardtext_container { 
  background: inherit; 
  margin-left: 4px; margin-right: 4px; 
  padding-left: 0; padding-right: 0;
}
.cardart {  position: relative;
            min-height: 123px; text-align: center; 
            overflow: hidden; /* make rounded borders clipping (tokens, planeswalkers) */ }
.cardart.image { background:image_url("loading.gif") no-repeat center;}
.cardart img { position: absolute; left: 0px;
            width: 180px;
            z-index: 0;}
.cardtypebar { padding-right: 0px !important;
              position: relative; }
.cardtype { }
/* .form .cardtype { white-space: nowrap; } */ /* needs to let legendary split cards' type bars fit */
.cardrarity { position: absolute; 
            right: 0px;
            top: -1px;
            padding-left: 3px;
            padding-right: 3px;
            margin-right: 2px;
            border: 1px solid black; 
            z-index: +1; }
.cardrarity.none { border: none; }
            
@-moz-document url-prefix() { /* Firefox wants it just fractionally lower... */
  .cardrarity { top: -0.5px; }
}
.form .cardrarity_container { position: relative; }
.form .cardrarity { position: relative; right: auto; left: 20px; }
.watermark { background-repeat: no-repeat !important; 
            background-position: center !important; 
            background-size: contain;
            z-index: 1; 
            position: absolute; 
            left: -2px;
            top: -2px;
            height: 100%;
            width: 100%;}
$CardTextHeight: 105px; /* up for M15 from 95px; */
.cardtext { position: relative; /* to make watermarks centre correctly */
            min-height: $CardTextHeight;
            font-family: Arial, Verdana, Helvetica, sans-serif; /* match prototip tooltips */
            padding: 2px; }
.rulestext_wrapper { z-index: 2; position: relative; }
.rulestext, .flavourtext {}
.cardtext br { margin-bottom: 0.25em; line-height: 1.25em;}
.cardtext .flavourtext br { margin-bottom: 0px; line-height: 1em; }
.cardtext div, .cardtext p { margin: 0px; }

.bottombox { /* background: inherit; */
            margin-bottom: 4px; padding-right: 6px;
            position: relative;
            font: 8pt serif; }
.artist {
  font-variant: small-caps;
}
.form .artist {
  /* top: 38px; */
  position: relative;
}
.flip .card .artist {
  width: 100%;
  display: block;
  padding-right: 3px;
  padding-left: 10px;
  position: relative;
  left: -3px;
  top: +10px;
}
.flip .card.part1 .artist {
  display: none;
}

.blackborder .artist, .blackborder .hologram_container {
color: white; background: black;
}
.whiteborder .artist, .whiteborder .hologram_container {
color: black; background: white;
}
.silverborder .artist, .silverborder .hologram_container {
color: black; background: $SilverBorder;
}
.goldborder .artist, .goldborder .hologram_container {
color: black; background: $GoldBorder;
}
.purpleborder .artist, .purpleborder .hologram_container {
color: white; background: $PurpleBorder;
}
.hologram_container {
  position: absolute;
  top: -8px;
  left: $CardWidth / 2 - 17px;
  margin: auto;
  background-color: black;
  border-top: 1px solid black;
  width: 34px;
  height: 18px;
  @include elliptical_corners_asymmetric(17px, 9px, 0, 0);
  z-index: +3;
}
.hologram {
  background-color: #ddd;
  width: 28px;
  height: 14px;
  margin: 2px 3px;
  @include elliptical_corners(18px, 8px);
}
.ptbox_container { 
  float: right; 
  position: relative; 
  top: -5px;
  right: -5px;
  height: 10px; min-width: 25%; 
}
.Planeswalker .ptbox_container { height: auto; }
.pinline_ptbox { float: right;
    position: absolute; top: -7px; right: 0px;
    min-width: 80%;
    text-align: center;
    /* padding-right: 0px; */ }
.ptbox { min-width: 90%;
  font: 11pt serif;
  padding: 0px !important; 
}

.cardtitlebar, .cardtypebar, .ptbox, .loyalty {
  font-family: Beleren, Times New Roman, serif;
}
.cardtext {
  /* font-family: MPlantin; */
}

.pinline_ptbox {
  border-right-color: #ccc;
  border-top-color: #ccc;
 }
.pinline_ptbox div {
  border-left-color: #ccc;
  border-bottom-color: #eee;
  border-top: 2px solid #444;
  border-right: 2px solid #4c4c4c;
 }

/* .manacost { align: right; } */
.cardtext { font-size: 9pt /*serif*/; }
.minitext, .nameminitext  { font-size: 9pt; }
.microtext { font-size: 8pt; }
.nanotext  { font-size: 7.5pt; }
.cardtext.enlarged { font-size: 10pt; }
.expanded .card { height: auto; }
.condensedtypeline { font-size: 8pt; letter-spacing: -2px; }
.flavourtext { font-style: italic; margin-top: .25em !important; }
.flavourtext i, .flavourtext em { font-style: normal; }

/* Mana symbol sizes */
.cardmanacost img, .cardmanacost img.mana { width: 14px; height: 14px; vertical-align: top; }
.cardtext  img, img.mana { height: 1em; vertical-align: middle; }
/*
.cardtext  img { width: 13px; height: 13px; vertical-align: middle; }
.minitext  img { width: 12px; height: 12px; }
.microtext img { width: 11px; height: 11px; }
.nanotext  img { width: 10px; height: 10px; } */

.cardrarity.common, .cardrarity.token, .cardrarity.basic {
  color: #fff;
  background-color: #000;
}
.uncommon {
  color: #000;
  background: #ccc;
  @include gradient_diag_highlight(#999, #ccd3d6);
}
.rare   {
  color: #000;
  background: #e0d060;
  @include gradient_diag_highlight(#998044, #e0d060);
}
.mythic {
  color: #fff;
  background: #933;
  @include gradient_diag_highlight(#a43, #e86);
}

.rulestext i, .rulestext i i i, .flavourtext i i, .flavourtext i i i i {
  font-style: italic;
}
.rulestext i i, .rulestext i i i i, .flavourtext i, .flavourtext i i i {
  font-style: normal;
}


/***** Planeswalkers *****/

.card.Planeswalker {
  padding-top: 0px;
  min-height: $CardHeight - $CardPaddingBottom - $M15PaddingBottom;
}

.Planeswalker .namebox { padding-top: 0px; }

.Planeswalker .pinline_box {
  @include elliptical_corners_asymmetric(8px, 2px, 12px, 2px);
}
.Planeswalker .cardtitlebar, .Planeswalker .cardtypebar {
  @include elliptical_corners_asymmetric(8px, 2px, 12px, 2px);
}

.Planeswalker .cardart_container .pinline_sides {
  @include elliptical_corners(4px, 42px);
}
.Planeswalker .cardart {
  @include elliptical_corners(7px, 40px);
  border-right: 1px solid black;
  border-left: 1px solid white;
  /* removed for M15: min-height: 141px; /* 131px; */
}
.Planeswalker .cardart.image {
  @include background_size(200px, 150px);
}


.Planeswalker .cardtext {
  @include elliptical_corners_asymmetric(4px, 18px, 38px, 12px); /* 4 18 8 32 */
  border-left: 1px solid black;
  border-bottom: 1px solid black;
  padding-left: 8px;
}
.Planeswalker .cardtext_container {
  background: none;
}
.Planeswalker .cardtext_container .pinline_sidesbottom {
  @include elliptical_corners_asymmetric(0px, 18px, 30px, 16px); /* 0 18 0 32 */
  padding-left: 16px;
}

.Planeswalker .cardtext {
  position: relative;
  padding-top: 4px;
}
.loyaltyContainer {
  position: relative;
  width: 32px;
  display: inline-block;
  top: -2px;
  vertical-align: text-top;
}
.loyalty {
  position: absolute;
  top: -2px;
  color: white;
  padding-top: 5px;
  padding-left: 1px;
  background-repeat: no-repeat;
  background-position: 3px 0px;
  width: 32px;
  height: 30px;
  text-align: center;
  font-weight: bold;
  font-size: 8pt;
  letter-spacing: -1px;
}
.Planeswalker .loyalty {
  left: -34px;
}
.Planeswalker .ptbox_container {
  top: 0px;
}
.Planeswalker .loyaltyContainer {
  width: 0px;
  display: inline; 
  top: 0px;
  /* padding-bottom: 5px; */
}
.Planeswalker .cardtext br { margin-bottom: 5px; line-height: 1.25em;}
.loyalty.positive { background-image: image-url("loyaltyup.png"); }
.loyalty.neutral  { background-image: image-url("loyaltynaught.png");
  padding-top: 3px;}
.loyalty.negative { background-image: image-url("loyaltydown.png"); }

.Planeswalker .pinline_ptbox.pinline {
  border: none;
  padding-right: 2px;
  top: -16px;
  right: -4px;
  background: none !important;
  filter: none !important;
}

.Planeswalker .pinline_ptbox .ptbox {
  background: none !important;
  background-image: image-url("loyalty.png") !important;
  background-repeat: no-repeat !important;
  border: none;
  color: white !important;
  height: 40px;
  width: 40px;
  position: absolute;
  padding-top: 4px !important;
}
div.dfc div.part2.Planeswalker div.ptbox_container div.pinline_ptbox { 
  /* need to override another !important, so make the above as specific as possible... */
  background: none !important;

  div.ptbox {  
    background-color: transparent !important;
    background-image: image-url("loyalty.png") !important;
    background-repeat: no-repeat !important;
  }
}


.Planeswalker .bottombox {
  position: relative;
  margin: 0 auto;
  text-align: left; 
}
.Planeswalker .artist {
  /* removed for M15: font-size: 7pt;
  position: absolute; width: 80%; left: 15%; top: -5px;
  padding-left: 20px; */
  position: relative;
  top: 8px;
  @include elliptical_corners_asymmetric(30px, 10px, 12px, 0px);
}

.Planeswalker .powerfield#card_power { width: 0px; }

/***** Tokens *****/

.token .cardtext { min-height: 60px; }
.token .cardtext_container.notext { padding: 0px; display: none; }
/* .token.card { height: 262px;} */
.token.card.form { height: inherit; }
.token .cardname, .token .cardname a {
  color: #ee9;
  text-shadow: #C5A86F 1px 0px;
  /* color: #ba8;
  text-shadow: #ff9 1px -1px; */
}
.token .cardname {
  float: none;
  padding-right: 2px; /* to balance the text-shadow */
  /* changed back from   font-variant: small-caps; */
  text-transform: uppercase; 
  letter-spacing: 0.5px;
}
/* First-letter doesn't work for multi-word tokens 
.token .cardname:first-letter {
  font-size: 14px;
} */

.token .cardtitlebar {
  background-color: #000 !important;
  background: #000 !important;
  text-align: center;
 }
.token .cardtitlebar label { color: #fff; }
.token .cardmanacost { display: none;}
.token .pinline.namebox { background: #ba8;
  border-top: 1px solid #ff9;
  padding-top: 1px;
  /* width: 120px; */
  margin: auto;
}
.token.form  .pinline.namebox {
  width: inherit;
}
.token .cardtitlebar {
  border-bottom: 1px solid #ff9;
}
.token .cardart {
  @include elliptical_corners(50px, 30px);
  border-right: 1px solid black;
  border-left: 1px solid white;
  height: 100%;
  min-height: 175px;
  @include background_size(178px, 225px);
}
.token .cardart_container .pinline_sides {
  @include elliptical_corners(45px, 32px);
  border-left: 1px solid black;
  border-top: 1px solid white;
  border-bottom: 1px solid black;
  padding-left: 2px;
  padding-right: 3px;
  height: 100%;
}
.token .cardart_container {
  @include elliptical_corners(44px, 32px);
}
.token .ptbox_container {
  /* top: 2px; */
}

/***** Split / Flip / Double-Faced Cards *****/

.split.cardborder { min-height: $SmallLandscapeCardHeight; width: $SmallLandscapeCardWidth; }
.dfc.form .card { width: $CardFormWidth; }
.split.form#cardborder { width: 500px; }
.split .card { min-height: 180px; height: 180px; padding-top: 2px; padding-bottom: 2px; }

.split .part1, .split .part2 { display: inline-block; width: 139px;}
.split .innercardborder, .dfc .innercardborder { display: inline-block; } /* beside each other */
.splitback .innercardborder { display: block; } /* on top of each other */
.dfc .part1,   .dfc .part2 { display: inline-block; }
.split .innercard2, .dfc .innercard2 { float: right;}
.split.form .part1, .split.form .part2 { width: 240px;}
/* .dfc.form .part1, .dfc.form .part2 { width: auto;} */

.dfc .innercardborder, .split .innercardborder { vertical-align: top; }
.dfc.cardborder.form { width: $CardFormWidth + $BorderWidth * 2; }
.dfc.cardborder { width: $CardWidth * 2 + $BorderWidth * 4 + 5; background-color: #999; }

.split .cardart { min-height: 76px; }
.split .cardart img { width: 126px; height: 76px; }
.split .cardtext { min-height: 65px; font-size: 8pt; }
.split .watermark { background-size: 50px; }
.split .cardtypebar{ font-size: 7.5pt; }
.split .bottombox { margin-bottom: -2px; font-size: 7pt; }
.split .pinlinebox { padding: 1px; }

.cardborder.splitback { height: 300px; }
.splitback .card.part1 { 
    padding-top: 2px; padding-bottom: 2px; 
    min-height: 153px; height: 153px; } /* actual height 160px, but this is the border curve */
.splitback .card.part2 { 
    min-width: 120px; width: 120px;
    min-height: 195px; height: 195px;
    padding-top: 2px; padding-bottom: 2px;
    padding-left: 0; padding-right: 0;
    }
.splitback .innercard2 { 
    height: 177px;
}
.splitback .part2 {
    @include rotate_plus90;
    position: absolute;
    left: +48px;
    top: 140px;
    border-radius: 25px;
}
.splitback .part1 .cardart { min-height: 60px; }
.splitback .part1 .cardart img { height: 60px; }
.splitback .part2 .cardart { min-height: 66px; }
.splitback .part2 .cardart img { max-width: 116px; max-height: 66px; }
.splitback .part1 .cardtext { min-height: 55px; font-size: 8pt; }
.splitback .part2 .cardtext { min-height: 75px; height: 75px; font-size: 8pt; } /* include min- to override the blanket .cardtext rule */
.splitback .part2 .namebox { margin-top: 4px; }
.splitback .part1 .bottombox { top: 128px; }
.splitback .part1 .bottombox .ptbox_container { top: -140px; }
.splitback .part1 .hologram_container { width: 24px; top: -6px; }
.splitback .part1 .hologram { width: 20px; height: 10px; margin: 1px 2px; }
.splitback .part2 .hologram_container, .splitback .part2 .artist { display: none; }

.split.form .cardrarity { /* top: 27px; */ left: 0px; }
.split input { width: 100px; }
.split input[type="checkbox"] { width: auto; }

.splitback.form.cardborder { height: auto; }
.splitback.form .part1 { width: 400px; }
.splitback.form .cardtext { height: auto; }
.splitback.form .part1 textarea.rulestextfield { height: 3em; }
.splitback.form .part2 textarea.rulestextfield { height: 6em; }
.splitback.form textarea.flavourtextfield { height: 2em; }
.splitback.form .bottombox { top: auto; }
.splitback.form .part1 .bottombox .ptbox_container { top: auto; }
/* For editing, we turn the innercardborder into a DFC-style actual black border */
.splitback.form .innercardborder { min-height: 250px; }
.splitback.form .innercardborder#card2wrapper {
  -webkit-transform: rotate(90deg);
  position: relative;
  left: 20px;
  top: 20px;
  @include round_corners($BorderWidth);
  border-width: $BorderWidth;
  border-style: solid; 
  border-width: 1px;
  padding: $BorderWidth - 1;
}
.blackborder.splitback.form .innercardborder#card2wrapper { border-color: black; background-color: black; }
.silverborder.splitback.form .innercardborder#card2wrapper { border-color: $SilverBorder; background-color: $SilverBorder; }
.goldborder.splitback.form .innercardborder#card2wrapper { border-color: $GoldBorder; background-color: $GoldBorder; }
.purpleborder.splitback.form .innercardborder#card2wrapper { border-color: $PurpleBorder; background-color: $PurpleBorder; }
.whiteborder.splitback.form .innercardborder#card2wrapper { border-color: black; background-color: white; }

.splitback.form .innercardborder#card2wrapper .card.part2  {
  -webkit-transform: rotate(0);
  top: 0;
  left: 0;
  position: relative;
  width: auto; 
  height: auto;
  padding-bottom: 10px;
}


.flip .card, .form .flip .card { min-height: 0px; height: auto !important; }
.flip .part1 .cardart_container { @include hide_but_allow_children; }
.flip .part1 .artist_area { display: none; }
.flip .part2 .cardrarity { display: none; }
.flip .cardtext { min-height: 38px; }
.flip .cardart { min-height: 122px; /* 105px; */ }

.flip .part1 .typebox { position: absolute; z-index: +2; top: +70px; width: 190px; }
.flip .part1 .ptbox_container { z-index: +2; left: +6px; top: 0;}
.flip .part1 .pinline_ptbox { top: -3px; }
.flip .part2 .cardart_container { position: relative; top: -12px; /* -32px; */ }
.flip .part1 .cardrarity { z-index: +2; top: 211px; }

.flip .part2 .namebox { position: relative; z-index: +2; top: 179px; /* 162px; */ }
.flip .part2 .typebox { top:-33px; position: relative; }
.flip .part2 .ptbox_container { right: -2px;}
.flip .part2 .pinline_ptbox { z-index: 2; right: 147px; top: -90px; }
.flip .part2 .cardtext_container { top: -32px; position: relative; }
.flip .part2 .bottombox { z-index: +1; width: 188px; position: absolute; /* top: 190px */; bottom: 0px; margin-bottom: 0px; }

.flip .part2 .cardtext, .flip .part2 .namebox, .flip .part2 .typebox, .flip .part2 .pinline_ptbox,
.flip.form .part2 .frame_selector_wrapper {
  @include rotate_180;
}
.rotated {
  @include rotate_180;
}
.split.rotated {
  @include rotate_minus90;
  left: -50px;
  top: 50px;
  margin-bottom: 100px;
  margin-right: -100px;
}
.splitback.rotated {
  @include rotate_minus90;
  left: 50px;
  top: -50px;
  /* margin-bottom: -100px;  */ /* commented out so that the "Rotate" link doesn't move around */
  margin-right: 100px;
}

.flip.form .part1 .cardtext_container { position: relative; top: -64px; }
.flip.form .part1 .typebox { position: relative; width: auto; top: 93px; /* top: 148px; */ }
.flip.form .part1 .ptbox_container { top: -38px; }
.flip.form .part1 .frame_selector_wrapper { @include show_children_of_hidden; top: +100px;}
.flip.form .part1 .bottombox { height: 0px; /*20px;*/ }
.flip.form .cardart { text-align: left; }
.flip.form .type_field { width: 65px; }
.flip.form .part2 .cardart_container { height: 50px; top: -85px;}
.flip.form .part2 .bottombox { position: relative; margin-top: 23px; top: 0px; }
.flip.form .part2 .pinline_ptbox { right: 110px; top: -234px; }
.flip.form .part2 .typebox { top: -32px; }
/* .flip.form .part2 .cardtext_container { top: -52px; } */
.flip.form .part2 .namebox { top: 240px; }
.flip.form .part1 .cardrarity { /* right: -170px; */ top: 362px; z-index: +3; }

@-moz-document url-prefix() { /* Firefox override */
  .flip.form .part1 .cardtext_container { top: -32px; }
  .flip.form .part1 .ptbox_container { top: -26px; }
  .flip.form .part2 .namebox { top: 200px; }
  .flip.form .part2 .pinline_ptbox { top: -197px; }
  .flip.form .part1 .cardrarity { top: 320px; }
}

$DFCSunMoonSize: 20px;
.dfc .pinline_box.namebox {
  display: inline-block;
  margin-left: 0px;
  width: $CardWidth - $DFCSunMoonSize - 18;
  vertical-align: top;
  margin-top: 0px;
  //float: right; 
}

.dfc.form .pinline_box.namebox { width: auto; float: none; }

.dfc .left_of_namebox {
  display: inline-block;
  width: $DFCSunMoonSize;
  height: $DFCSunMoonSize;
}
.dfc .part1 .left_of_namebox {
  background-image: image-url("dfc_front.png");
}
.dfc .part2 .left_of_namebox {
  background-image: image-url("dfc_back.png");
}
.dfc.form .left_of_namebox {
  position: relative;
  top: 20px;
}
//.dfc .cardart { width: 100%; }

/***** Large Cards *****/

.scheme, .plane, .vanguard {
  .pinline, .pinline > div, .pinline_box, .pinline_box > div {
    border: none;
    padding: 0px;
    @include round_corners(0px);
  }
  .cardmanacost {
    display: none;
  }
  .form {
    .cardart {
      height: auto;
    }
  }
  .frame_selector_wrapper {
    display: none;
  }
  
}
$SchemeTopBorder: 10px;
$SchemeOtherBorders: 20px;
$SchemeBGColour: #246;
$SchemeRidgeColour: #C94;
$SchemeInnerHeight: $LargePortraitCardHeight - $SchemeTopBorder - $SchemeOtherBorders - 3*2 - 4*2;
$PinlineBoxHeight: 16px;
$SchemeArtHeight: $SchemeInnerHeight - (3 + $PinlineBoxHeight + 3)*2 - ($CardTextHeight + 2 + 2);
.vanguard { 
  &.cardborder { 
    min-height: $LargePortraitCardHeight; 
    width: $LargePortraitCardWidth;
  }
  &.distinct_mockup_container { min-height: $LargePortraitCardHeight; 
    width: $LargePortraitCardWidth + 20; }
  .cardname {
    float: none;
    text-align: center;
  }
}
.scheme { 
  &.cardborder { 
    min-height: $LargePortraitCardHeight; 
    width: $LargePortraitCardWidth;
  }
  &.distinct_mockup_container { min-height: $LargePortraitCardHeight; 
    width: $LargePortraitCardWidth + 20; }
  .innercardborder {
    border: 4px ridge $SchemeRidgeColour;
    width: auto;
    height: auto;
    background-color: rgba(32, 32, 64, 0.5);
    padding: $SchemeOtherBorders;
    padding-top: $SchemeTopBorder;
    background-color: $SchemeBGColour;
    background-size: 300px, 400px;
  }
  .card {
    border: 1px ridge $SchemeRidgeColour;
    border-top: none;
    background-color: rgba(128, 128, 128, 0.5);
    min-height: $SchemeInnerHeight;
    width: $LargePortraitCardWidth - 2 * $SchemeOtherBorders - 3*2 - 4*2;
    padding: 0px;
  }
  .pinline_box {
    border-top: 3px ridge $SchemeRidgeColour;
    border-bottom: 3px ridge $SchemeRidgeColour;
  }
  .cardtitlebar {
    @include round_corners(0px);
    border-bottom: 3px ridge $SchemeRidgeColour;
    background-color: rgba(255, 255, 255, 0.9);
  }
  .cardname {
    float: none;
    text-align: center;
  }
  .cardtext_container, .cardtypebar {
    background-image: none;
    background-color: rgba(255, 255, 255, 0.8);
  }
  .cardart {
    height: $SchemeArtHeight;
  }
  /* Fading around artbox and textbox: two layers
    - one of mostly-solid darkish grey, 
    the other of faintly-solid medium grey */
  .cardart_container, .cardtext_container {
    padding: 0px;
    border-left: 2px solid rgba(64, 64, 64, 0.8);
    border-right: 2px solid rgba(64, 64, 64, 0.8);
  }
  .cardtext_container {
    border-bottom: 2px solid rgba(64, 64, 64, 0.8);
  }
  .pinline_sides, .pinline_sidesbottom {
    border-left: 2px solid rgba(128, 128, 128, 0.4);
    border-right: 2px solid rgba(128, 128, 128, 0.4);
  }
  .pinline_sidesbottom {
    border-bottom: 2px solid rgba(128, 128, 128, 0.4);
  }
  .cardtype {
    padding-left: 5px;
  }
  .bottombox {
    position: absolute;
    text-align: center;
    width: 100%;
    color: white;
  }
  div.cardtext { /* "div" required because of the "> div" rule above */
    padding: 8px;
    min-height: auto;
  }
  
  /* Forms */
  .form {
    margin-bottom: 40px;
    .ptbox_container, .card_cost_container, .subtype_container, .colour_indicator_container {
      display: none;
    }
  }
}

$PlaneRidgeColour: #C94;
$PlaneTopPadding: 10px;
$PlaneTextBottomPadding: 10px;
$PlaneInnerHeight: $LargeLandscapeCardHeight - $PlaneTopPadding - - 3*2 - 4*2;
$PlaneArtHeight: $PlaneInnerHeight - (3 + $PinlineBoxHeight + 3) - ($CardTextHeight) - (2 + $PlaneTextBottomPadding);
.plane { 
  &.cardborder { 
    /* min-height: $LargeLandscapeCardHeight; */
    width: $LargeLandscapeCardWidth;
  }
  &.distinct_mockup_container { width: $LargeLandscapeCardWidth + 20; }
  .innercardborder {
    border: 2px ridge $PlaneRidgeColour;
    width: auto;
    height: auto;
    min-height: 0px;
    padding-top: $PlaneTopPadding;
    background-color: #acc;
    background-size: 400px, 300px;
    @include elliptical_corners_asymmetric(22px, 14px, 26px, 86px);
  }
  .card {
    border: 2px ridge $PlaneRidgeColour;
    border-top: none;
    border-bottom: none;
    padding: 0px;
    width: auto;
    min-height: 0px;
    @include elliptical_corners_asymmetric(50px, 40px, 80px, 186px);
  }
  .pinline_box {
    padding: 0px;
  }
  .namebox {
    position: absolute;
    border: 2px ridge $PlaneRidgeColour;
    left: 10px;
    top: -12px;
    width: 368px;
    height: 26px;
    background-color: rgb(200, 200, 200);  /* for IE7-8 */
    background-color: rgba(255, 255, 255, 0.7);
  }
  .namebox, div.cardtitlebar {
    @include elliptical_corners_asymmetric(4px, 160px, 12px, 12px);
  }
  .namebox div.cardtitlebar { /* ".namebox div"  necessary to override */
    border: 2px solid rgba(128, 128, 128, 0.5);
    height: 23px;
  }
  .cardname {
    float: none;
    text-align: center;
    font-size: 11pt;
    padding-top: 2px;
  }
  .cardart_container, .cardtext_container {
    background: none;
  }
  .cardart {
    height: $PlaneArtHeight;
  }
  .typebox {
    position: absolute;
    border: 2px ridge $PlaneRidgeColour;
    left: 75px;
    width: 250px;
    background-color: rgb(200, 200, 200);  /* for IE7-8 */
    background-color: rgba(255, 255, 255, 0.7);
    z-index: +2;
  }
  .typebox, .typebar {
    @include elliptical_corners_asymmetric(160px, 8px, 0px, 12px);
  }
  .typebar {
    border: 1px solid rgba(128, 128, 128, 0.5);
  }
  .cardtype {
    text-align: center;
  }
  .cardtext_container {
    margin-left: 30px;
    margin-right: 30px;
    border: 2px ridge $PlaneRidgeColour;
    border-bottom: none;
    margin-top: 16px;
    padding: 0px;
    /* height: 105px; */
    background-color: rgba(128, 128, 128, 0.4);
  }
  .cardtext_container {
    @include elliptical_corners_asymmetric(50px, 6px, 18px, 6px);
  }
  .rulestext, .form textarea.rulestextfield{
    @include elliptical_corners_asymmetric(50px, 0px, 18px, 0px);
  }
  .cardtext {
    min-height: 65px;
  }
  /* Rules text */
  .rulestext, .form textarea.rulestextfield {
    background-color: rgb(200, 200, 200);  /* for IE7-8 */
    background-color: rgba(255, 255, 255, 0.6);
  }
  .rulestext {
    padding: 10px 10px 5px 10px;
  }
  .form textarea.rulestextfield {
    border: none;
    padding: 10px 0px 0px 10px;
    min-width: 300px;
  }
  /* Flavour text */
  .flavourtext, .form textarea.flavourtextfield {
    font-style: normal;
  }
  .flavourtext {
    padding: 10px 10px 20px 10px;
    background-color: rgb(140, 140, 140);  /* for IE7-8 */
    background-color: rgba(170, 170, 170, 0.5);
    margin-top: 0px !important;
  }
  .form textarea.flavourtextfield {
    border: none;
    padding-left: 50px;
    width: 85%;
  }
  .flavourtext:before {
    content: image-url("chaos_tiny.png");
    display: inline-block;
    vertical-align: top;
    float: left;
    margin-right: 3px;
  }
  .form .flavourtext:before {
    position: absolute;
  }
  .bottombox {
    position: relative;
    float: left;
    left: 80px;
    top: -10px;
    z-index: +2;
    background-color: black;
    color: white;
    width: 240px;
    text-align: center;
    border-top: 2px ridge $PlaneRidgeColour;
    @include elliptical_corners_asymmetric(120px, 20px, 10px, 0px);
    height: 14px;
  }
  
  /* Forms */
  .form {
    .namebox, .typebox {
      position: relative;
      left: auto;
      width: auto;
    }
    .ptbox_container, .card_cost_container, .colour_indicator_container {
      display: none;
    }
    .cardtitlebar .field {
      padding-left: 50px;
      top: -4px;
      position: relative;
      br {
        display: none;
      }
    }
    .cardtype {
      text-align: left;
    }
    .cardrarity_container {
      position: absolute;
      right: 0px;
      top: 0px;
    }
    .bottombox {
      top: -30px;
      height: 30px;
    }
  }
}

.vanguard { }

.emblem { }

/***** Colour Indicators *****/

img.colour_indicator { 
  vertical-align: text-bottom; 
}
.split .colour_indicator {
  width: 10px;
  height: 10px;
  vertical-align: top;
}

/***** Colours *****/
$Colourless_Card: #ccc6cc;
$Colourless_Card_Semitransparent: rgba(204, 198, 204, 0.7);
$Colourless_Pinline: #ddd;
$Colourless_PinlineBox: #ccc;
$Colourless_Text: #f2ecf2;
$Colourless_Title: #eee9ee;
$White_Card: #eae1c8; /* #efe8d4; and before that, #FBF9EA; */
$White_Pinline: #fffef7; /* #F2EFEA; */
$White_Bar: #fffff9;
$White_Text: #fff;
$Blue_Card: #63ACDA;
$Blue_Pinline: #197D9E; /* #195D7E; */
$Blue_Bar: #C5DADF;
$Blue_Text: #E1ECED;
$Black_Card: #444;
$Black_Pinline: #333;
$Black_Bar: #bbb7b7;
$Black_Text: #ddd9d3;
$Red_Card: #E0664F;
$Red_Pinline: #C23D34;
$Red_Bar: #F9D5C0;
$Red_Text: #F7E6DE;
$Green_Card: #7ea17e;
$Green_Pinline: #483;
$Green_Bar: #cdc;
$Green_Text: #DEEADE;
$Land_White_Bar: #fffff6;
$Land_White_Text: #eeb;
$Land_Blue_Bar: #afcfff;
$Land_Blue_Text: #99c5ff;
$Land_Black_Bar: #cfc9c3;
$Land_Black_Text: #bbb;
$Land_Red_Bar: #ffd0c0;
$Land_Red_Text: #fa8;
$Land_Green_Bar: #dfd;
$Land_Green_Text: #c8e7c8;
$Artifact_Text: #D5DDE0;
$Land_Colourless_Bar: #D8CFC8;
$Land_Text: #D8CFC8;
$Multicolour_Text: #ffd;
$Multicolour_Background: #CAB86C;
$Vehicle_Background: #953;
$Vehicle_Highlight: #a47439;
$Vehicle_PTBox: #b74;

$White_DFC_Bar: #887b6b;
$White_DFC_Text: #beb7a7;
$Blue_DFC_Bar: #3188b4;
$Blue_DFC_Text: #b8cad3;
$Black_DFC_Bar: #625f5e;
$Black_DFC_Text: #b9b7b8;
$Red_DFC_Bar: #c56244;
$Red_DFC_Text: #d6bbb4;
$Green_DFC_Bar: #406649;
$Green_DFC_Text: #afb8b2;
$Hybrid_DFC_Bar: #786860;
$Hybrid_DFC_Text: #bebcba;
$Colourless_DFC_Bar: #886b6b;
$Colourless_DFC_Text: #BEa0A7;
$Artifact_DFC_Bar: #709498;
$Artifact_DFC_Bar_Highlight: #90a4b0;
$Artifact_DFC_Text: #c2ccd0;
$Land_Colourless_DFC_Bar: #A89878;
$Land_Colourless_DFC_Text: #D8CFC8;

.dfc .part2 .cardtitlebar, .dfc .part2 .cardtypebar, .dfc .part2 .pinline_ptbox { color: #fff; }

.Colourless.card, .Colourless .cardart  { background-color: $Colourless_Card; }
/* For colourless only, we split type and title, for devoid purposes. Title is here above the coloured cards, so it gets overridden by them. Type is below the colours, so that it overrides them. */
.Colourless .cardtitlebar { background-color: $Colourless_Title; }
.Colourless .cardtext, .Colourless .pinline_ptbox { background: $Colourless_Text !important; }
.dfc .part2.Colourless {
  .cardtitlebar { background-color: $Colourless_DFC_Bar; }
  .cardtext { background: $Colourless_DFC_Text !important; }
  .pinline_ptbox  { background-color:$Colourless_DFC_Bar !important; }
}

$ArtifactBorder: #9CAAB3; /* pre-M15: #ABC1CE; */

$ArtifactPinline: #dbdfe0;
$ArtifactTitlebar: #c6cfd6; /* pre-M15: #B0C4C8; */
$ArtifactTitlebarHighlight: #d6e0e6;
.Artifact .pinline { background-color: $ArtifactPinline; }
.Artifact .pinline_ptbox { background-color: #9CB7BE; }
.Artifact .ptbox { background-color: #A8BFC7; }
.Artifact .cardtitlebar, .Artifact .cardtypebar {
   background: $ArtifactTitlebar; 
   @include gradient_horz_highlight($ArtifactTitlebar, $ArtifactTitlebarHighlight);
   /* pre-M15: @include gradient_vert_highlight(#B0C4C8, #D2D7DB); */
   }
.Artifact .cardtext, .Artifact .pinline_ptbox { background-color: $Artifact_Text; }
.Artifact, .Artifact .cardart { background-color: $ArtifactBorder; }
.Coloured_Artifact { background: $ArtifactBorder !important; filter: none !important; }
.dfc .part2.Artifact {
  .cardtitlebar, .cardtypebar { 
    background-color: $Artifact_DFC_Bar; 
    @include gradient_horz_highlight($Artifact_DFC_Bar, $Artifact_DFC_Bar_Highlight);
  }
  .cardtext { background: $Artifact_DFC_Text !important; }
  .pinline_ptbox, .ptbox  { background-color: $Artifact_DFC_Bar !important; }
}


<%
Card.colours.each do |thisColour|
  thiscolour = thisColour.downcase;
%>

  .<%= thisColour %>.card, .<%= thisColour %> .cardart { 
    background-color: $<%= thisColour %>_Card; 
  }
  .<%= thisColour %> .pinline, .Land.<%= thiscolour %> .pinline { 
    background-color: $<%= thisColour %>_Pinline; 
  }
  .<%= thisColour %> .cardtitlebar, .<%= thisColour %> .cardtypebar { 
    background-color: $<%= thisColour %>_Bar; 
  }
  .<%= thisColour %> .cardtext, .<%= thisColour %> .pinline_ptbox { 
    background: $<%= thisColour %>_Text !important; 
  }
  .dfc .part2.<%= thisColour %>, .dfc .part2.Land.<%= thiscolour %> {
    .cardtitlebar, .cardtypebar { background-color: $<%= thisColour %>_DFC_Bar; }
    .cardtext { background: $<%= thisColour %>_DFC_Text !important; }
    .pinline_ptbox  { background-color:$<%= thisColour %>_DFC_Bar !important; }
  }
  /* Devoid */
  .card.Colourless.<%= thisColour %>.card {
    @include gradient_vert_20($<%= thisColour %>_Card, $Colourless_Card, $Colourless_Card); 
  }
  .card.Colourless.<%= thisColour %> .cardart {
    background-color: $Colourless_Card;
    /*  background: -webkit-gradient(linear, left top, left bottom, from($<%= thisColour %>_Card), color-stop(0, $Colourless_Card), to($Colourless_Card)); */
  }

<%
end
%>

/* Gradients for blue and gold */
.Blue .cardtitlebar, .Blue .cardtypebar { 
  @include gradient_horz_highlight(#B7CEDA, #C8DCE4); }
.dfc .part2.Blue, .dfc .part2.Land.blue {
  .cardtitlebar, .cardtypebar { 
    @include gradient_horz_highlight(#2a84b6, #4d95c1);
  }
}

.Multicolour, .Multicolour .cardart { background-color: $Multicolour_Background; /*#DAC87C;*/ }
.Multicolour, .Land.multicolour {
  .pinline { background-color: #eAd88C; /* #C6AF71;*/ }
  .cardtitlebar, .cardtypebar { 
    background-color: #DAC87C;
    @include gradient_horz_highlight(#B9A566, #DBC68F);
  }
  .cardtext { background-color: $Multicolour_Text; }
}
.Multicolour .pinline_ptbox { background: #C6AF71 !important; }
.Multicolour .ptbox { background: #C6AF71 !important; }

.card.Colourless.Multicolour.card {
  @include gradient_vert_20($Multicolour_Background, $Colourless_Card, $Colourless_Card); 
}
.card.Colourless.Multicolour .cardart {
  background-color: $Colourless_Card;
  /*  background: -webkit-gradient(linear, left top, left bottom, from($Multicolour_Background), color-stop(0, $Colourless_Card), to($Colourless_Card)); */
}

.dfc .part2.Multicolour, .dfc .part2.Land.multicolour {
  .cardtitlebar, .cardtypebar { 
    background-color: #957526;
    @include gradient_horz_highlight(#957526, #bBa66F); 
  }
  .cardtext { background: $Hybrid_DFC_Text; }
  .pinline_ptbox, .ptbox { background-color: #957526 !important; }
}
.dfc .part2.Hybrid {
  .cardtext { background: $Hybrid_DFC_Text !important; filter: none; }
}
.dfc {
  .part2.Hybrid, .part2.Land.colourless, .part2.Land.whiteblue, .part2.Land.whiteblack, .part2.Land.whitered, .part2.Land.whitegreen, .part2.Land.blueblack, .part2.Land.bluered, .part2.Land.bluegreen, .part2.Land.blackred, .part2.Land.blackgreen, .part2.Land.redgreen {
    .cardtitlebar, .cardtypebar { background-color: $Hybrid_DFC_Bar; }
    .pinline_ptbox, .ptbox { background-color: $Hybrid_DFC_Bar !important; }
  }
} 

.Land, .Land.Coloured_Artifact {  /*#A4968E*/; 
  @include gradient_vert_important(#DECCC1, #6A514A); 
}
.Land.Coloured_Artifact .cardtitlebar, .Land.Coloured_Artifact .cardtypebar  {
   /* Copying .Artifact .cardtitlebar & .Artifact .cardtypebar above 
      Needs to be down here for C42507 */
   background: $ArtifactTitlebar; 
   @include gradient_horz_highlight($ArtifactTitlebar, $ArtifactTitlebarHighlight);
   }
.Land .cardart { background-color: #b9aea2; }
.Land .pinline { background-color: #d7cDbF /*C7BDAF*/; }
.Land .cardtitlebar, .Land .cardtypebar { 
  background-color: $Land_Colourless_Bar; 
}
.Land .cardtext, .Land .pinline_ptbox { background-color: $Land_Text; /* #eee6df; */}
.Land .bottombox, .Land .cardtext_container, .Land .cardart_container { background: transparent; }


<%
Card.colours.each do |thisColour|
  thiscolour = thisColour.downcase;
%>

.Land.<%= thiscolour %> {
  .cardtitlebar, .cardtypebar { background-color: $Land_<%= thisColour %>_Bar; }
  .cardtext, .pinline_ptbox { background-color: $Land_<%= thisColour %>_Text; }
}

<%
end
%>


<%
Card.colour_pairs.each do |thisColourPair|
  Colour1, Colour2 = thisColourPair;
  colour1, colour2 = Colour1.downcase, Colour2.downcase;
  colour1colour2 = colour1 + colour2;
  colour2colour1 = colour2 + colour1;
%>

.<%= colour1colour2 %> .pinline { @include gradient_horz_padded($<%= Colour1 %>_Pinline, $<%= Colour2 %>_Pinline); }
.<%= colour2colour1 %> .pinline { @include gradient_horz_padded($<%= Colour1 %>_Pinline, $<%= Colour2 %>_Pinline); }
/* .Land.whiteblue .cardtitlebar, .Land.whiteblue .cardtypebar { @include gradient_horz($Land_White_Bar, $Land_Blue_Bar); } */

.Hybrid.<%= colour1colour2 %> { @include gradient_horz_padded($<%= Colour1 %>_Card, $<%= Colour2 %>_Card); }
.Hybrid.<%= colour2colour1 %> { @include gradient_horz_padded($<%= Colour1 %>_Card, $<%= Colour2 %>_Card); }

/* Bottom half of flip card has mirrored hybrid colouring */
.flip .part2.Hybrid.<%= colour1colour2 %> { @include gradient_horz_padded($<%= Colour2 %>_Card, $<%= Colour1 %>_Card ); }
.flip .part2.Hybrid.<%= colour2colour1 %> { @include gradient_horz_padded($<%= Colour2 %>_Card, $<%= Colour1 %>_Card ); }

.<%= colour1colour2 %> .cardtext { @include gradient_horz_padded($<%= Colour1 %>_Text, $<%= Colour2 %>_Text); }
.<%= colour2colour1 %> .cardtext { @include gradient_horz_padded($<%= Colour1 %>_Text, $<%= Colour2 %>_Text); }
.Land.<%= colour1colour2 %> .cardtext { @include gradient_horz_padded($Land_<%= Colour1 %>_Text, $Land_<%= Colour2 %>_Text); }
.Land.<%= colour2colour1 %> .cardtext { @include gradient_horz_padded($Land_<%= Colour1 %>_Text, $Land_<%= Colour2 %>_Text); }

.dfc .part2.<%= colour1colour2 %> .cardtext { @include gradient_horz_padded($<%= Colour1 %>_DFC_Text, $<%= Colour2 %>_DFC_Text); }
.dfc .part2.<%= colour2colour1 %> .cardtext { @include gradient_horz_padded($<%= Colour1 %>_DFC_Text, $<%= Colour2 %>_DFC_Text); }

<%
end
%>

.Hybrid .cardtitlebar, .Hybrid .cardtypebar {
  background: #D2CCC0;
}
.Hybrid .ptbox {
  background: #D2CCC0 !important;
}
.Hybrid .pinline_ptbox, .Land .pinline_ptbox {
  background: #e2dCd0 !important;
}
.Hybrid .cardart {
  background-color: #eeeeee;
}

.Vehicle {
    background-color: $Vehicle_Background;
    background-image: 
      repeating-linear-gradient(to bottom,
        transparent, transparent 7%, #aaa 0, #aaa 1px, #888 8%, #555 10%, #444 11%),
      linear-gradient(to bottom, $Vehicle_Background, $Vehicle_Highlight 40%, $Vehicle_Background 90%, $Vehicle_Background);
}
.Vehicle .ptbox, .Vehicle .notptbox {
    background-color: $Vehicle_Background;
    color: white;
}
.Vehicle .pinline_ptbox {
    background-color: $Vehicle_PTBox !important;
}

/* Now the second half of colourless, for devoid purposes */
.Colourless .cardtypebar { 
  background-color: $Colourless_Title; 
  @include gradient_horz_highlight($Colourless_Title, $Colourless_Title);
}
.dfc .part2.Colourless {
  .cardtypebar { 
    background-color: $Colourless_DFC_Bar; 
    @include gradient_horz_highlight($Colourless_DFC_Bar, $Colourless_DFC_Bar);
  }
}
.Colourless .pinline {
  background-color: $Colourless_Pinline;
  background-image: none;
}
.Colourless .pinline_box {
  background-color: $Colourless_PinlineBox;
  @include gradient_vert(#ddd, #aaa); 
}
/* Hybrid + Devoid = two gradients. Fake it with a :before div. */
.card.Colourless.Hybrid {
  position: relative;
  z-index: 1;
}
.card.Colourless.Hybrid:before {
  content: " ";
  height: 99%; /* works on split, normal, form */
  width: 100%;
  background-color: $Colourless_Card;
  background-color: $Colourless_Card_Semitransparent;
  @include gradient_vert_20(rgba(255,255,255,0), $Colourless_Card, $Colourless_Card);
  /* background: -webkit-gradient(linear, left top, left bottom, from(), color-stop(0.3, $Colourless_Card), color-stop(0.9, $Colourless_Card), to(rgba(255,255,255,0))); /* fade out at the bottom for the curves to collector info */
  z-index: 0;
  display: block;
  position: absolute;
  left: 0px;
}
.form.card.Colourless.Hybrid:before {
  height: 430px;
}



/***** Dominion *****/
.Dominion.card {
  padding-left: 0px;
  padding-right: 0px;
}
.Dominion.Treasure {
  background-color: #ec6;
}
.Dominion .pinline_box, .Dominion .pinline_sides, .Dominion .pinline_sidesbottom, .Dominion .pinline_sides > div, .Dominion .pinline_sidesbottom > div, .Dominion .cardtitlebar { border: 0px; padding: 0px 0px 0px 0px;
}
.Dominion .cardname {
  float: none;
  display: inline;
  padding-right: 2px;}
.Dominion .cardtitlebar {
  text-align: center;
text-transform:uppercase;
font-size: 18px;
}
.Dominion .cardart {
  background: white;
  padding: 0px;
}
.Dominion .cardtext {
  background: #bbb;
  text-align: center;
  padding: 0px;
}
.Dominion .cardart_container, .Dominion .cardtext_container {
  padding: 0px;
}
.Dominion .cardtypebar { position: absolute; bottom: 0px; width: 100%; border: 0px;
  text-align: center;
text-transform:uppercase;
}
.Dominion .cardtext img { height: 3em;}

.Dominion .cardmanacost { position: absolute; bottom: 0px; left: 4px; }
.Dominion .cardmanacost img { height: 1em; width: 1em; }


/***** Card editing *****/
.form.cardborder, .form .innercardborder, .form .card  { width: auto; }
.form .innercardborder {
  padding-bottom: 30px; 
  height: auto;
}
.form.flip .innercardborder {
  padding-bottom: 0;
}
.form .card { 
  height: 430px;
}

input.type_field { width: 100px; }
.form #card_cost, .form #card_link_attributes_cost { width: 60px; }
input.rarity_selector { margin-top: 6px; margin-bottom: 6px; }
input.powerfield, input.toughnessfield { width: 20px; }
.flavourtextfield { font-style: italic;
                  width: 98%; }
.rulestextfield { width: 98%; }
.art_url_field  { width: 98%; }
.image_url_field, .edit_comment_field  { width: 400px; }
form .raritycell { border: 1px solid black; }
.Planeswalker #power_field, .Planeswalker #pt_slash { display: none; }
.Planeswalker .notptbox { 
    background-image: image-url("loyalty_big.png");
    border: none;
    width: 80px; height: 41px; /* img is 51px high, minus the 10px top padding */
    padding: 10px 0px 0px 0px; }
.Planeswalker.form .pinline_ptbox.pinline { top: -36px; 
  background-color: rgba(0,0,0,0) !important;
}
.flip .flavourtextfield { display: none; }
.form .watermark { position: relative; }
.form .watermark textarea { background: transparent; }

.multipart_selector_div { text-align: center; margin-bottom: 8px; }
#multipart_selector_wrapper { padding: 8px; }

div.history_box_limited { overflow: auto;
 height: 50%;
}
td.form_info_cell { color: #666; }
.Black .cardart label { color: #fff; }
.Black .artist_area label, .Hybrid.blackgreen .artist_area label, .Hybrid.blackred .artist_area label { color: #fff; }

#card2wrapper { display: none; }
.split #card2wrapper, .flip #card2wrapper, .dfc #card2wrapper, .splitback #card2wrapper { display: inline-block; }

/***** Skeletons *****/
.skeleton_letter_toggle.code_shown.rarity_C_toggle, .skeleton_letter_toggle.code_shown.rarity_B_toggle, .skeleton_letter_toggle.code_shown.rarity_T_toggle { @extend .cardrarity.common; }
.skeleton_letter_toggle.code_shown.rarity_U_toggle { @extend .uncommon; }
.skeleton_letter_toggle.code_shown.rarity_R_toggle { @extend .rare; }
.skeleton_letter_toggle.code_shown.rarity_M_toggle { @extend .mythic; }
.skeleton_letter_toggle, .skeleton tr {
  &.code_frame_C { background-color: $Colourless_Text; }
  &.code_frame_W { background-color: $Land_White_Text; }
  &.code_frame_U { background-color: $Land_Blue_Text; }
  &.code_frame_B { background-color: $Land_Black_Text; }
  &.code_frame_R { background-color: $Land_Red_Text; }
  &.code_frame_G { background-color: $Land_Green_Text; }
  &.code_frame_A { background-color: $Artifact_Text; }
  &.code_frame_M, &.code_frame_Z { background-color: $Multicolour_Background; }
  &.code_frame_H { @include gradient_horz_padded($Land_White_Text, $Land_Black_Text); }
  &.code_frame_S { @include twotone_horz($Land_Red_Text, $Land_Blue_Text); }
  &.code_frame_L { background-color: $Land_Colourless_Bar; }
  &.code_rarity_C, &.code_rarity_B, &.code_rarity_T { 
    td.code_link, td.code_link a {
      @extend .cardrarity.common;
      text-shadow: 1px 0 #888888;
    }
  }
  &.code_frame_E { 
    background-color: $SchemeBGColour; color: #fff; 
    border: 3px ridge $SchemeRidgeColour;
    }
  &.code_frame_P { 
    @include round_corners(4px);
    border: 2px ridge $PlaneRidgeColour;}
}
.code_rarity_U td.code_link { @extend .uncommon; }
.code_rarity_R td.code_link { @extend .rare; }
.code_rarity_M td.code_link { @extend .mythic; }
/* td.code_link { text-align: center; } */


.skeleton_letter_toggle { margin: auto; padding-left: 6px; padding-right: 6px; border: 1px solid black; }
.code_shown { color: black; font-style: normal; }
.code_not_shown { color: #999 !important; font-style: italic; }
.skeleton_letter_toggle.code_not_shown { background-color: white; background: white; border: 1px solid black; }

div.wizardsimage {
  /* @extend .blackborder;
  width: 200px;
  height: 285px; */
  align: center;
  background-color: white;
  color: red;
}


@media print {
  .commentcount {
    display: none;
  }
  .cardname a {
    text-decoration: none;
  }
}

/* Buttons - in here because they mimic cards */
/* General card-title-like-ness */

div.button_outer {
  display: inline-block; /* fit to content, don't stretch to fill parent */
  /* Mirroring .pinline: */
  /* Mirroring .pinline_box: */
  padding: 2px;
  border-left: 1px solid black;
  border-right: 1px solid black;
  border-bottom: 1px solid black;
  @include elliptical_corners(6px, 12px);
}

div.button_outer div.button_inner {
  /* Mirroring .pinline_box: */
  /* Mirroring .pinline_box > div: */
  border: 1px solid black;
  @include elliptical_corners(4px, 8px);
  /* Specific to the buttony use case: */
  padding-left: 0;
  padding-right: 0;
  padding-top: 0;
  padding-bottom: 0;
}
div.button_inner {
  & > input, & > button, & > a {
    @extend .cardtitlebar;
    /* Mirroring .pinline_box > div */
    @include elliptical_corners(4px, 8px);
  }
  & > input, & > button {
    border: none;
    padding: 3px 8px 2px 8px;
  }
  & > a {
    padding: 2px 8px;
    display: inline-block;
    text-decoration: none;
  }
}

/* Default artifact style for most buttons: */
div.button_outer {
  /* Mirroring .Artifact .pinline - @extend can't copy series of selectors */ 
  background-color: $ArtifactPinline; 
}
$Button_Focus: #D7DDE2;
$Button_Focus_Highlight: #E7EDF0;
$Button_Clicked: $Artifact_DFC_Bar; 
$Button_Clicked_Highlight: $Artifact_DFC_Bar_Highlight;
div.button_inner {
  & > input, & > button, & > a {
    /* Mirroring .Artifact .cardtitlebar */
    background-color: $ArtifactTitlebar; /* pre-M15: #B0C4C8; */
    @include gradient_horz_highlight($ArtifactTitlebar, $ArtifactTitlebarHighlight);
    &:hover, &:focus {
      background-color: $Button_Focus;
      color: black;
@include gradient_horz_highlight($Button_Focus, $Button_Focus_Highlight);
    }
    &:active {
      background-color: $Button_Clicked; 
      color: white;
@include gradient_horz_highlight($Button_Clicked, $Button_Clicked_Highlight);
    }
  }
}

<% Card.colours.each do |thisColour| %>
div.button_outer.button_<%= thisColour %> {
  background-color: $<%= thisColour %>_Pinline;
}
.button_<%= thisColour %> div.button_inner {
  & > input, & > button, & > a {
    background-image: none;
    background-color: $Land_<%= thisColour %>_Bar;
    &:hover, &:focus {
      background-color: $Land_<%= thisColour %>_Text;
      color: black;
    }
    &:active {
      background-color: $<%= thisColour %>_DFC_Bar; 
      color: white;
    }
  }
}
<% end %>